#############################################################################
# Makefile for building: Encoder
# Generated by qmake (2.01a) (Qt 4.7.4) on: ?? 2? 16 09:58:12 2012
# Project:  Encoder.pro
# Template: app
# Command: /usr/bin/qmake-qt4 -spec /usr/share/qt4/mkspecs/linux-g++ -o Makefile Encoder.pro
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = -DQT_WEBKIT -DQT_NO_DEBUG -DQT_XML_LIB -DQT_GUI_LIB -DQT_NETWORK_LIB -DQT_CORE_LIB -DQT_SHARED
CFLAGS        = -pipe -O2 -Wall -W -D_REENTRANT $(DEFINES)
CXXFLAGS      = -pipe -O2 -Wall -W -D_REENTRANT $(DEFINES)
INCPATH       = -I/usr/share/qt4/mkspecs/linux-g++ -I. -I/usr/include/qt4/QtCore -I/usr/include/qt4/QtNetwork -I/usr/include/qt4/QtGui -I/usr/include/qt4/QtXml -I/usr/include/qt4 -I/usr/include/QtGStreamer -I. -I.
LINK          = g++
LFLAGS        = -Wl,-O1
LIBS          = $(SUBLIBS)  -L/usr/lib/i386-linux-gnu -lQtGStreamerUtils-0.10 -lQtGStreamerUi-0.10 -lvlc -lQtGStreamer-0.10 -lQtGLib-2.0 -lQtXml -lQtGui -lQtNetwork -lQtCore -lpthread 
AR            = ar cqs
RANLIB        = 
QMAKE         = /usr/bin/qmake-qt4
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = $(COPY)
COPY_DIR      = $(COPY) -r
STRIP         = strip
INSTALL_FILE  = install -m 644 -p
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = install -m 755 -p
DEL_FILE      = rm -f
SYMLINK       = ln -f -s
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = ./

####### Files

SOURCES       = main.cpp \
		mainwindow.cpp \
		mydata.cpp \
		gstmux.cpp \
		group.cpp \
		dlgmux.cpp \
		dlggroup.cpp \
		dlgmix.cpp \
		gstmix.cpp \
		mixview.cpp \
		mixbox.cpp \
		mysocket.cpp moc_mainwindow.cpp \
		moc_mydata.cpp \
		moc_gstmux.cpp \
		moc_group.cpp \
		moc_dlgmux.cpp \
		moc_dlggroup.cpp \
		moc_dlgmix.cpp \
		moc_gstmix.cpp \
		moc_mixbox.cpp \
		moc_mysocket.cpp
OBJECTS       = main.o \
		mainwindow.o \
		mydata.o \
		gstmux.o \
		group.o \
		dlgmux.o \
		dlggroup.o \
		dlgmix.o \
		gstmix.o \
		mixview.o \
		mixbox.o \
		mysocket.o \
		moc_mainwindow.o \
		moc_mydata.o \
		moc_gstmux.o \
		moc_group.o \
		moc_dlgmux.o \
		moc_dlggroup.o \
		moc_dlgmix.o \
		moc_gstmix.o \
		moc_mixbox.o \
		moc_mysocket.o
DIST          = /usr/share/qt4/mkspecs/common/g++.conf \
		/usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/modules/qt_phonon.pri \
		/usr/share/qt4/mkspecs/modules/qt_webkit_version.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/release.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/link_pkgconfig.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf \
		Encoder.pro
QMAKE_TARGET  = Encoder
DESTDIR       = 
TARGET        = Encoder

first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: Makefile $(TARGET)

$(TARGET): ui_mainwindow.h ui_dlgmux.h ui_dlggroup.h ui_dlgmix.h $(OBJECTS)  
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJCOMP) $(LIBS)

Makefile: Encoder.pro  /usr/share/qt4/mkspecs/linux-g++/qmake.conf /usr/share/qt4/mkspecs/common/g++.conf \
		/usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/modules/qt_phonon.pri \
		/usr/share/qt4/mkspecs/modules/qt_webkit_version.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/release.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/link_pkgconfig.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf \
		/usr/lib/i386-linux-gnu/libQtCore.prl \
		/usr/lib/i386-linux-gnu/libQtXml.prl \
		/usr/lib/i386-linux-gnu/libQtGui.prl \
		/usr/lib/i386-linux-gnu/libQtNetwork.prl
	$(QMAKE) -spec /usr/share/qt4/mkspecs/linux-g++ -o Makefile Encoder.pro
/usr/share/qt4/mkspecs/common/g++.conf:
/usr/share/qt4/mkspecs/common/unix.conf:
/usr/share/qt4/mkspecs/common/linux.conf:
/usr/share/qt4/mkspecs/qconfig.pri:
/usr/share/qt4/mkspecs/modules/qt_phonon.pri:
/usr/share/qt4/mkspecs/modules/qt_webkit_version.pri:
/usr/share/qt4/mkspecs/features/qt_functions.prf:
/usr/share/qt4/mkspecs/features/qt_config.prf:
/usr/share/qt4/mkspecs/features/exclusive_builds.prf:
/usr/share/qt4/mkspecs/features/default_pre.prf:
/usr/share/qt4/mkspecs/features/release.prf:
/usr/share/qt4/mkspecs/features/default_post.prf:
/usr/share/qt4/mkspecs/features/link_pkgconfig.prf:
/usr/share/qt4/mkspecs/features/warn_on.prf:
/usr/share/qt4/mkspecs/features/qt.prf:
/usr/share/qt4/mkspecs/features/unix/thread.prf:
/usr/share/qt4/mkspecs/features/moc.prf:
/usr/share/qt4/mkspecs/features/resources.prf:
/usr/share/qt4/mkspecs/features/uic.prf:
/usr/share/qt4/mkspecs/features/yacc.prf:
/usr/share/qt4/mkspecs/features/lex.prf:
/usr/share/qt4/mkspecs/features/include_source_dir.prf:
/usr/lib/i386-linux-gnu/libQtCore.prl:
/usr/lib/i386-linux-gnu/libQtXml.prl:
/usr/lib/i386-linux-gnu/libQtGui.prl:
/usr/lib/i386-linux-gnu/libQtNetwork.prl:
qmake:  FORCE
	@$(QMAKE) -spec /usr/share/qt4/mkspecs/linux-g++ -o Makefile Encoder.pro

dist: 
	@$(CHK_DIR_EXISTS) .tmp/Encoder1.0.0 || $(MKDIR) .tmp/Encoder1.0.0 
	$(COPY_FILE) --parents $(SOURCES) $(DIST) .tmp/Encoder1.0.0/ && $(COPY_FILE) --parents mainwindow.h mydata.h gstmux.h group.h dlgmux.h dlggroup.h dlgmix.h gstmix.h mixview.h mixbox.h mysocket.h .tmp/Encoder1.0.0/ && $(COPY_FILE) --parents main.cpp mainwindow.cpp mydata.cpp gstmux.cpp group.cpp dlgmux.cpp dlggroup.cpp dlgmix.cpp gstmix.cpp mixview.cpp mixbox.cpp mysocket.cpp .tmp/Encoder1.0.0/ && $(COPY_FILE) --parents mainwindow.ui dlgmux.ui dlggroup.ui dlgmix.ui .tmp/Encoder1.0.0/ && (cd `dirname .tmp/Encoder1.0.0` && $(TAR) Encoder1.0.0.tar Encoder1.0.0 && $(COMPRESS) Encoder1.0.0.tar) && $(MOVE) `dirname .tmp/Encoder1.0.0`/Encoder1.0.0.tar.gz . && $(DEL_FILE) -r .tmp/Encoder1.0.0


clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) 
	-$(DEL_FILE) Makefile


check: first

mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all: moc_mainwindow.cpp moc_mydata.cpp moc_gstmux.cpp moc_group.cpp moc_dlgmux.cpp moc_dlggroup.cpp moc_dlgmix.cpp moc_gstmix.cpp moc_mixbox.cpp moc_mysocket.cpp
compiler_moc_header_clean:
	-$(DEL_FILE) moc_mainwindow.cpp moc_mydata.cpp moc_gstmux.cpp moc_group.cpp moc_dlgmux.cpp moc_dlggroup.cpp moc_dlgmix.cpp moc_gstmix.cpp moc_mixbox.cpp moc_mysocket.cpp
moc_mainwindow.cpp: mydata.h \
		group.h \
		gstmux.h \
		dlgmux.h \
		gstmix.h \
		dlgmix.h \
		mixview.h \
		mixbox.h \
		dlggroup.h \
		mainwindow.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) mainwindow.h -o moc_mainwindow.cpp

moc_mydata.cpp: mydata.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) mydata.h -o moc_mydata.cpp

moc_gstmux.cpp: dlgmux.h \
		mydata.h \
		gstmux.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) gstmux.h -o moc_gstmux.cpp

moc_group.cpp: mydata.h \
		gstmux.h \
		dlgmux.h \
		gstmix.h \
		dlgmix.h \
		mixview.h \
		mixbox.h \
		dlggroup.h \
		group.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) group.h -o moc_group.cpp

moc_dlgmux.cpp: dlgmux.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) dlgmux.h -o moc_dlgmux.cpp

moc_dlggroup.cpp: dlggroup.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) dlggroup.h -o moc_dlggroup.cpp

moc_dlgmix.cpp: dlgmix.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) dlgmix.h -o moc_dlgmix.cpp

moc_gstmix.cpp: dlgmix.h \
		mydata.h \
		mixview.h \
		mixbox.h \
		gstmix.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) gstmix.h -o moc_gstmix.cpp

moc_mixbox.cpp: mixbox.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) mixbox.h -o moc_mixbox.cpp

moc_mysocket.cpp: mysocket.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) mysocket.h -o moc_mysocket.cpp

compiler_rcc_make_all:
compiler_rcc_clean:
compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all: ui_mainwindow.h ui_dlgmux.h ui_dlggroup.h ui_dlgmix.h
compiler_uic_clean:
	-$(DEL_FILE) ui_mainwindow.h ui_dlgmux.h ui_dlggroup.h ui_dlgmix.h
ui_mainwindow.h: mainwindow.ui
	/usr/bin/uic-qt4 mainwindow.ui -o ui_mainwindow.h

ui_dlgmux.h: dlgmux.ui
	/usr/bin/uic-qt4 dlgmux.ui -o ui_dlgmux.h

ui_dlggroup.h: dlggroup.ui
	/usr/bin/uic-qt4 dlggroup.ui -o ui_dlggroup.h

ui_dlgmix.h: dlgmix.ui
	/usr/bin/uic-qt4 dlgmix.ui -o ui_dlgmix.h

compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: compiler_moc_header_clean compiler_uic_clean 

####### Compile

main.o: main.cpp mainwindow.h \
		mydata.h \
		group.h \
		gstmux.h \
		dlgmux.h \
		gstmix.h \
		dlgmix.h \
		mixview.h \
		mixbox.h \
		dlggroup.h \
		mysocket.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o main.o main.cpp

mainwindow.o: mainwindow.cpp mainwindow.h \
		mydata.h \
		group.h \
		gstmux.h \
		dlgmux.h \
		gstmix.h \
		dlgmix.h \
		mixview.h \
		mixbox.h \
		dlggroup.h \
		ui_mainwindow.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o mainwindow.o mainwindow.cpp

mydata.o: mydata.cpp mydata.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o mydata.o mydata.cpp

gstmux.o: gstmux.cpp gstmux.h \
		dlgmux.h \
		mydata.h \
		group.h \
		gstmix.h \
		dlgmix.h \
		mixview.h \
		mixbox.h \
		dlggroup.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o gstmux.o gstmux.cpp

group.o: group.cpp group.h \
		mydata.h \
		gstmux.h \
		dlgmux.h \
		gstmix.h \
		dlgmix.h \
		mixview.h \
		mixbox.h \
		dlggroup.h \
		mainwindow.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o group.o group.cpp

dlgmux.o: dlgmux.cpp dlgmux.h \
		ui_dlgmux.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o dlgmux.o dlgmux.cpp

dlggroup.o: dlggroup.cpp dlggroup.h \
		ui_dlggroup.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o dlggroup.o dlggroup.cpp

dlgmix.o: dlgmix.cpp dlgmix.h \
		ui_dlgmix.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o dlgmix.o dlgmix.cpp

gstmix.o: gstmix.cpp gstmix.h \
		dlgmix.h \
		mydata.h \
		mixview.h \
		mixbox.h \
		group.h \
		gstmux.h \
		dlgmux.h \
		dlggroup.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o gstmix.o gstmix.cpp

mixview.o: mixview.cpp mixview.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o mixview.o mixview.cpp

mixbox.o: mixbox.cpp mixbox.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o mixbox.o mixbox.cpp

mysocket.o: mysocket.cpp mysocket.h \
		mainwindow.h \
		mydata.h \
		group.h \
		gstmux.h \
		dlgmux.h \
		gstmix.h \
		dlgmix.h \
		mixview.h \
		mixbox.h \
		dlggroup.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o mysocket.o mysocket.cpp

moc_mainwindow.o: moc_mainwindow.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_mainwindow.o moc_mainwindow.cpp

moc_mydata.o: moc_mydata.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_mydata.o moc_mydata.cpp

moc_gstmux.o: moc_gstmux.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_gstmux.o moc_gstmux.cpp

moc_group.o: moc_group.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_group.o moc_group.cpp

moc_dlgmux.o: moc_dlgmux.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_dlgmux.o moc_dlgmux.cpp

moc_dlggroup.o: moc_dlggroup.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_dlggroup.o moc_dlggroup.cpp

moc_dlgmix.o: moc_dlgmix.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_dlgmix.o moc_dlgmix.cpp

moc_gstmix.o: moc_gstmix.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_gstmix.o moc_gstmix.cpp

moc_mixbox.o: moc_mixbox.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_mixbox.o moc_mixbox.cpp

moc_mysocket.o: moc_mysocket.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_mysocket.o moc_mysocket.cpp

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

